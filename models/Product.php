<?php

namespace app\models;

use Yii;
use app\components\message\Language;
use yii\behaviors\AttributeBehavior;
use yii\behaviors\SluggableBehavior;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
/**
 * This is the model class for table "product".
 *
 * @property integer $id
 * @property integer $cat_id
 * @property string $name
 * @property string $slug
 * @property string $imgUrl
 * @property string $desc
 * @property string $content
 * @property integer $sort
 * @property integer $status
 * @property integer $created_at
 * @property integer $updated_at
 * @property integer $language
 */
class Product extends \yii\db\ActiveRecord
{
    public $categoryId;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%product}}';
    }
    /**
     * 初始化
     */
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        // 触发器
        $this->on(self::EVENT_AFTER_FIND, [self::className(), 'replaceImgUrl']);//查询后替换图片路径
    }
    /**
     * 行为
     * @return array
     */
    public function behaviors()
    {
        return [
            [
                'class'      => AttributeBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at','updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => 'updated_at',
                ],
                'value'      => function ($event) {
                    return time();//填充值
                },
            ],
            [
                'class'      => AttributeBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['language'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => 'language',
                ],
                'value'      => function ($event) {
                    return Language::getLanguageNum();//填充值
                },
            ],

        ];
    }
    /**
     * 分类关联
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(Category::className(), ['id' => 'cat_id']);
    }

    /**
     * 替换图片前缀
     * @param $event
     */
    public static function replaceImgUrl($event)
    {
        $sender = $event->sender;
        if(!empty($sender->imgUrl)) $sender->imgUrl = yiiParams('imgHost') . $sender->imgUrl;
    }
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['cat_id', 'status', 'sort', 'created_at', 'updated_at', 'language'], 'integer'],
            [['content'], 'string'],
            [['name'], 'string', 'max' => 50],
            [['slug'], 'string', 'max' => 250],
            [['imgUrl', 'desc'], 'string', 'max' => 255],
        ];
    }


    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'cat_id' => 'Cat ID',
            'name' => 'Name',
            'slug' => 'Slug',
            'imgUrl' => 'Img Url',
            'desc' => 'Desc',
            'content' => 'Content',
            'sort' => 'Sort',
            'status' => 'Status',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'language' => 'Language',
        ];
    }
}
